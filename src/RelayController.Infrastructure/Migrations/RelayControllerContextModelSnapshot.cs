// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RelayController.Infrastructure.Context;

#nullable disable

namespace RelayController.Infrastructure.Migrations
{
    [DbContext(typeof(RelayControllerContext))]
    partial class RelayControllerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RelayController.Domain.Aggregates.RelayControllerAggregates.RelayControllerBoard", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<int?>("DayOfMonth")
                        .HasColumnType("integer")
                        .HasColumnName("day_of_month");

                    b.Property<string>("DayOfWeek")
                        .HasColumnType("text")
                        .HasColumnName("day_of_week");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enable");

                    b.Property<string>("Repeat")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("repeat");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("Created");

                    b.HasIndex("Updated");

                    b.ToTable("relay_controller_boards", (string)null);
                });

            modelBuilder.Entity("RelayController.Domain.Aggregates.RelayControllerAggregates.RelayControllerBoard", b =>
                {
                    b.OwnsOne("RelayController.Domain.ValueObjects.Time", "EndTime", b1 =>
                        {
                            b1.Property<Guid>("RelayControllerBoardId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Hour")
                                .HasColumnType("integer")
                                .HasColumnName("end_hour");

                            b1.Property<int>("Minute")
                                .HasColumnType("integer")
                                .HasColumnName("end_minute");

                            b1.Property<int>("Second")
                                .HasColumnType("integer")
                                .HasColumnName("end_second");

                            b1.HasKey("RelayControllerBoardId");

                            b1.ToTable("relay_controller_boards");

                            b1.WithOwner()
                                .HasForeignKey("RelayControllerBoardId");
                        });

                    b.OwnsOne("RelayController.Domain.ValueObjects.Time", "StartTime", b1 =>
                        {
                            b1.Property<Guid>("RelayControllerBoardId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Hour")
                                .HasColumnType("integer")
                                .HasColumnName("start_hour");

                            b1.Property<int>("Minute")
                                .HasColumnType("integer")
                                .HasColumnName("start_minute");

                            b1.Property<int>("Second")
                                .HasColumnType("integer")
                                .HasColumnName("start_second");

                            b1.HasKey("RelayControllerBoardId");

                            b1.ToTable("relay_controller_boards");

                            b1.WithOwner()
                                .HasForeignKey("RelayControllerBoardId");
                        });

                    b.Navigation("EndTime");

                    b.Navigation("StartTime")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
